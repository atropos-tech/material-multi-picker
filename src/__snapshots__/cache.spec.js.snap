// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiPicker component uses global cache if configured 1`] = `
<JssProvider
  generateClassName={[Function]}
>
  <WithStyles(MultiPicker)
    getSuggestedItems={[Function]}
    itemToString={[Function]}
    onChange={[Function]}
    useGlobalCache="test"
    value={Array []}
  >
    <MultiPicker
      classes={
        Object {
          "pickerChip": "MultiPicker-pickerChip",
        }
      }
      getSuggestedItems={[Function]}
      itemToString={[Function]}
      onChange={[Function]}
      useGlobalCache="test"
      value={Array []}
    >
      <Downshift
        defaultHighlightedIndex={null}
        defaultIsOpen={false}
        environment={[Window]}
        fullWidth={true}
        getA11yStatusMessage={[Function]}
        inputValue="some text"
        itemToString={[Function]}
        onChange={[Function]}
        onInputValueChange={[Function]}
        onOuterClick={[Function]}
        onSelect={[Function]}
        onStateChange={[Function]}
        onUserAction={[Function]}
        scrollIntoView={[Function]}
        selectedItemChanged={[Function]}
        stateReducer={[Function]}
        suppressRefError={false}
      >
        <div
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-labelledby="downshift-0-label"
          aria-owns="downshift-0-menu"
          role="combobox"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <WithStyles(PickerInput)
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls="downshift-0-menu"
            aria-labelledby="downshift-0-label"
            autoComplete="off"
            id="downshift-0-input"
            inputRef={
              Object {
                "current": <input
                  aria-autocomplete="list"
                  aria-controls="downshift-0-menu"
                  aria-invalid="false"
                  aria-labelledby="downshift-0-label"
                  autocomplete="off"
                  class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                  id="downshift-0-input"
                  type="text"
                  value="some text"
                />,
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            startAdornment={false}
            value="some text"
          >
            <PickerInput
              aria-activedescendant={null}
              aria-autocomplete="list"
              aria-controls="downshift-0-menu"
              aria-labelledby="downshift-0-label"
              autoComplete="off"
              classes={
                Object {
                  "InputLabelFilled": "PickerInput-InputLabelFilled",
                  "InputLabelRoot": "PickerInput-InputLabelRoot",
                  "InputLabelShrink": "PickerInput-InputLabelShrink",
                  "InputRoot": "PickerInput-InputRoot",
                  "inputRoot": "PickerInput-inputRoot",
                }
              }
              fullWidth={false}
              id="downshift-0-input"
              inputRef={
                Object {
                  "current": <input
                    aria-autocomplete="list"
                    aria-controls="downshift-0-menu"
                    aria-invalid="false"
                    aria-labelledby="downshift-0-label"
                    autocomplete="off"
                    class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                    id="downshift-0-input"
                    type="text"
                    value="some text"
                  />,
                }
              }
              label=""
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              startAdornment={false}
              value="some text"
            >
              <TextField
                InputLabelProps={
                  Object {
                    "classes": Object {
                      "filled": "PickerInput-InputLabelFilled",
                      "root": "PickerInput-InputLabelRoot",
                      "shrink": "PickerInput-InputLabelShrink",
                    },
                    "shrink": true,
                  }
                }
                InputProps={
                  Object {
                    "classes": Object {
                      "root": "PickerInput-InputRoot",
                    },
                    "inputProps": Object {
                      "aria-activedescendant": null,
                      "aria-autocomplete": "list",
                      "aria-controls": "downshift-0-menu",
                      "aria-labelledby": "downshift-0-label",
                      "autoComplete": "off",
                      "className": "PickerInput-inputRoot",
                      "id": "downshift-0-input",
                      "onDragStart": undefined,
                      "style": undefined,
                    },
                    "inputRef": Object {
                      "current": <input
                        aria-autocomplete="list"
                        aria-controls="downshift-0-menu"
                        aria-invalid="false"
                        aria-labelledby="downshift-0-label"
                        autocomplete="off"
                        class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                        id="downshift-0-input"
                        type="text"
                        value="some text"
                      />,
                    },
                    "startAdornment": false,
                    "style": undefined,
                  }
                }
                fullWidth={false}
                label=""
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                required={false}
                select={false}
                value="some text"
                variant="standard"
              >
                <WithStyles(FormControl)
                  fullWidth={false}
                  onKeyDown={[Function]}
                  required={false}
                  variant="standard"
                >
                  <FormControl
                    classes={
                      Object {
                        "fullWidth": "MuiFormControl-fullWidth",
                        "marginDense": "MuiFormControl-marginDense",
                        "marginNormal": "MuiFormControl-marginNormal",
                        "root": "MuiFormControl-root",
                      }
                    }
                    component="div"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    margin="none"
                    onKeyDown={[Function]}
                    required={false}
                    variant="standard"
                  >
                    <div
                      className="MuiFormControl-root"
                      onKeyDown={[Function]}
                    >
                      <WithStyles(Input)
                        classes={
                          Object {
                            "root": "PickerInput-InputRoot",
                          }
                        }
                        fullWidth={false}
                        inputProps={
                          Object {
                            "aria-activedescendant": null,
                            "aria-autocomplete": "list",
                            "aria-controls": "downshift-0-menu",
                            "aria-labelledby": "downshift-0-label",
                            "autoComplete": "off",
                            "className": "PickerInput-inputRoot",
                            "id": "downshift-0-input",
                            "onDragStart": undefined,
                            "style": undefined,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              aria-autocomplete="list"
                              aria-controls="downshift-0-menu"
                              aria-invalid="false"
                              aria-labelledby="downshift-0-label"
                              autocomplete="off"
                              class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                              id="downshift-0-input"
                              type="text"
                              value="some text"
                            />,
                          }
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        startAdornment={false}
                        value="some text"
                      >
                        <Input
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled",
                              "error": "MuiInput-error",
                              "focused": "MuiInput-focused",
                              "formControl": "MuiInput-formControl",
                              "fullWidth": "MuiInput-fullWidth",
                              "input": "MuiInput-input",
                              "inputMarginDense": "MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInput-inputMultiline",
                              "inputType": "MuiInput-inputType",
                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                              "multiline": "MuiInput-multiline",
                              "root": "MuiInput-root PickerInput-InputRoot",
                              "underline": "MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          inputProps={
                            Object {
                              "aria-activedescendant": null,
                              "aria-autocomplete": "list",
                              "aria-controls": "downshift-0-menu",
                              "aria-labelledby": "downshift-0-label",
                              "autoComplete": "off",
                              "className": "PickerInput-inputRoot",
                              "id": "downshift-0-input",
                              "onDragStart": undefined,
                              "style": undefined,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                aria-autocomplete="list"
                                aria-controls="downshift-0-menu"
                                aria-invalid="false"
                                aria-labelledby="downshift-0-label"
                                autocomplete="off"
                                class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                                id="downshift-0-input"
                                type="text"
                                value="some text"
                              />,
                            }
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          startAdornment={false}
                          value="some text"
                        >
                          <WithStyles(WithFormControlContext(InputBase))
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled",
                                "error": "MuiInput-error",
                                "focused": "MuiInput-focused",
                                "formControl": "MuiInput-formControl",
                                "fullWidth": "MuiInput-fullWidth",
                                "input": "MuiInput-input",
                                "inputMarginDense": "MuiInput-inputMarginDense",
                                "inputMultiline": "MuiInput-inputMultiline",
                                "inputType": "MuiInput-inputType",
                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                "multiline": "MuiInput-multiline",
                                "root": "MuiInput-root PickerInput-InputRoot MuiInput-underline",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            inputComponent="input"
                            inputProps={
                              Object {
                                "aria-activedescendant": null,
                                "aria-autocomplete": "list",
                                "aria-controls": "downshift-0-menu",
                                "aria-labelledby": "downshift-0-label",
                                "autoComplete": "off",
                                "className": "PickerInput-inputRoot",
                                "id": "downshift-0-input",
                                "onDragStart": undefined,
                                "style": undefined,
                              }
                            }
                            inputRef={
                              Object {
                                "current": <input
                                  aria-autocomplete="list"
                                  aria-controls="downshift-0-menu"
                                  aria-invalid="false"
                                  aria-labelledby="downshift-0-label"
                                  autocomplete="off"
                                  class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                                  id="downshift-0-input"
                                  type="text"
                                  value="some text"
                                />,
                              }
                            }
                            multiline={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            startAdornment={false}
                            type="text"
                            value="some text"
                          >
                            <WithFormControlContext(InputBase)
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "disabled": "MuiInputBase-disabled MuiInput-disabled",
                                  "error": "MuiInputBase-error MuiInput-error",
                                  "focused": "MuiInputBase-focused MuiInput-focused",
                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                  "input": "MuiInputBase-input MuiInput-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                  "inputType": "MuiInputBase-inputType MuiInput-inputType",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                  "root": "MuiInputBase-root MuiInput-root PickerInput-InputRoot MuiInput-underline",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              inputProps={
                                Object {
                                  "aria-activedescendant": null,
                                  "aria-autocomplete": "list",
                                  "aria-controls": "downshift-0-menu",
                                  "aria-labelledby": "downshift-0-label",
                                  "autoComplete": "off",
                                  "className": "PickerInput-inputRoot",
                                  "id": "downshift-0-input",
                                  "onDragStart": undefined,
                                  "style": undefined,
                                }
                              }
                              inputRef={
                                Object {
                                  "current": <input
                                    aria-autocomplete="list"
                                    aria-controls="downshift-0-menu"
                                    aria-invalid="false"
                                    aria-labelledby="downshift-0-label"
                                    autocomplete="off"
                                    class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                                    id="downshift-0-input"
                                    type="text"
                                    value="some text"
                                  />,
                                }
                              }
                              multiline={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              startAdornment={false}
                              type="text"
                              value="some text"
                            >
                              <InputBase
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart",
                                    "disabled": "MuiInputBase-disabled MuiInput-disabled",
                                    "error": "MuiInputBase-error MuiInput-error",
                                    "focused": "MuiInputBase-focused MuiInput-focused",
                                    "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                    "input": "MuiInputBase-input MuiInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                    "inputType": "MuiInputBase-inputType MuiInput-inputType",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                    "root": "MuiInputBase-root MuiInput-root PickerInput-InputRoot MuiInput-underline",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                inputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": "downshift-0-menu",
                                    "aria-labelledby": "downshift-0-label",
                                    "autoComplete": "off",
                                    "className": "PickerInput-inputRoot",
                                    "id": "downshift-0-input",
                                    "onDragStart": undefined,
                                    "style": undefined,
                                  }
                                }
                                inputRef={
                                  Object {
                                    "current": <input
                                      aria-autocomplete="list"
                                      aria-controls="downshift-0-menu"
                                      aria-invalid="false"
                                      aria-labelledby="downshift-0-label"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                                      id="downshift-0-input"
                                      type="text"
                                      value="some text"
                                    />,
                                  }
                                }
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": true,
                                    "focused": false,
                                    "margin": "none",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                                multiline={false}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                startAdornment={false}
                                type="text"
                                value="some text"
                              >
                                <div
                                  className="MuiInputBase-root MuiInput-root PickerInput-InputRoot MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-activedescendant={null}
                                    aria-autocomplete="list"
                                    aria-controls="downshift-0-menu"
                                    aria-invalid={false}
                                    aria-labelledby="downshift-0-label"
                                    autoComplete="off"
                                    className="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                                    disabled={false}
                                    id="downshift-0-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                    value="some text"
                                  />
                                </div>
                              </InputBase>
                            </WithFormControlContext(InputBase)>
                          </WithStyles(WithFormControlContext(InputBase))>
                        </Input>
                      </WithStyles(Input)>
                    </div>
                  </FormControl>
                </WithStyles(FormControl)>
              </TextField>
            </PickerInput>
          </WithStyles(PickerInput)>
          <DebouncedContainer
            anchorElement={
              <input
                aria-autocomplete="list"
                aria-controls="downshift-0-menu"
                aria-invalid="false"
                aria-labelledby="downshift-0-label"
                autocomplete="off"
                class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                id="downshift-0-input"
                type="text"
                value="some text"
              />
            }
            clearItems={[Function]}
            clearSelection={[Function]}
            closeMenu={[Function]}
            getItemProps={[Function]}
            getLabelProps={[Function]}
            getMenuProps={[Function]}
            getRootProps={[Function]}
            getToggleButtonProps={[Function]}
            highlightedIndex={null}
            id="downshift-0"
            inputValue="some text"
            isOpen={true}
            itemToString={[Function]}
            openMenu={[Function]}
            reset={[Function]}
            selectHighlightedItem={[Function]}
            selectItem={[Function]}
            selectItemAtIndex={[Function]}
            selectedItem={null}
            setHighlightedIndex={[Function]}
            setItemCount={[Function]}
            setState={[Function]}
            suggestions={
              Array [
                "some suggestion",
              ]
            }
            toggleMenu={[Function]}
            unsetItemCount={[Function]}
          >
            <PickerDropdown
              anchorElement={
                <input
                  aria-autocomplete="list"
                  aria-controls="downshift-0-menu"
                  aria-invalid="false"
                  aria-labelledby="downshift-0-label"
                  autocomplete="off"
                  class="MuiInputBase-input MuiInput-input PickerInput-inputRoot"
                  id="downshift-0-input"
                  type="text"
                  value="some text"
                />
              }
              clearItems={[Function]}
              clearSelection={[Function]}
              closeMenu={[Function]}
              getItemProps={[Function]}
              getLabelProps={[Function]}
              getMenuProps={[Function]}
              getRootProps={[Function]}
              getToggleButtonProps={[Function]}
              highlightedIndex={null}
              id="downshift-0"
              inputValue="some text"
              isOpen={true}
              itemToString={[Function]}
              openMenu={[Function]}
              reset={[Function]}
              selectHighlightedItem={[Function]}
              selectItem={[Function]}
              selectItemAtIndex={[Function]}
              selectedItem={null}
              setHighlightedIndex={[Function]}
              setItemCount={[Function]}
              setState={[Function]}
              suggestions={
                Array [
                  "some suggestion",
                ]
              }
              toggleMenu={[Function]}
              unsetItemCount={[Function]}
            >
              <WithStyles(Paper)
                component="ul"
                role="menu"
                square={true}
                style={
                  Object {
                    "margin": 0,
                    "overflowY": "auto",
                    "padding": 0,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": 20,
                  }
                }
              >
                <Paper
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="ul"
                  elevation={2}
                  role="menu"
                  square={true}
                  style={
                    Object {
                      "margin": 0,
                      "overflowY": "auto",
                      "padding": 0,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": 20,
                    }
                  }
                >
                  <ul
                    className="MuiPaper-root MuiPaper-elevation2"
                    role="menu"
                    style={
                      Object {
                        "margin": 0,
                        "overflowY": "auto",
                        "padding": 0,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": 20,
                      }
                    }
                  >
                    <WithStyles(PickerSuggestions)
                      clearItems={[Function]}
                      clearSelection={[Function]}
                      closeMenu={[Function]}
                      getItemProps={[Function]}
                      getLabelProps={[Function]}
                      getMenuProps={[Function]}
                      getRootProps={[Function]}
                      getToggleButtonProps={[Function]}
                      highlightedIndex={null}
                      id="downshift-0"
                      inputValue="some text"
                      itemToString={[Function]}
                      openMenu={[Function]}
                      reset={[Function]}
                      selectHighlightedItem={[Function]}
                      selectItem={[Function]}
                      selectItemAtIndex={[Function]}
                      selectedItem={null}
                      setHighlightedIndex={[Function]}
                      setItemCount={[Function]}
                      setState={[Function]}
                      suggestions={
                        Array [
                          "some suggestion",
                        ]
                      }
                      toggleMenu={[Function]}
                      unsetItemCount={[Function]}
                    >
                      <PickerSuggestions
                        classes={
                          Object {
                            "highlighted": "PickerSuggestions-highlighted",
                          }
                        }
                        clearItems={[Function]}
                        clearSelection={[Function]}
                        closeMenu={[Function]}
                        getItemProps={[Function]}
                        getLabelProps={[Function]}
                        getMenuProps={[Function]}
                        getRootProps={[Function]}
                        getToggleButtonProps={[Function]}
                        highlightedIndex={null}
                        id="downshift-0"
                        inputValue="some text"
                        itemToString={[Function]}
                        openMenu={[Function]}
                        reset={[Function]}
                        selectHighlightedItem={[Function]}
                        selectItem={[Function]}
                        selectItemAtIndex={[Function]}
                        selectedItem={null}
                        setHighlightedIndex={[Function]}
                        setItemCount={[Function]}
                        setState={[Function]}
                        suggestions={
                          Array [
                            "some suggestion",
                          ]
                        }
                        toggleMenu={[Function]}
                        unsetItemCount={[Function]}
                      >
                        <WithStyles(MenuItem)
                          aria-selected={false}
                          className=""
                          id="downshift-0-item-0"
                          key="some suggestion"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="menuitem"
                          style={
                            Object {
                              "height": "auto",
                              "padding": 0,
                            }
                          }
                        >
                          <MenuItem
                            aria-selected={false}
                            className=""
                            classes={
                              Object {
                                "gutters": "MuiMenuItem-gutters",
                                "root": "MuiMenuItem-root",
                                "selected": "MuiMenuItem-selected",
                              }
                            }
                            component="li"
                            disableGutters={false}
                            id="downshift-0-item-0"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                            onMouseMove={[Function]}
                            role="menuitem"
                            style={
                              Object {
                                "height": "auto",
                                "padding": 0,
                              }
                            }
                          >
                            <WithStyles(ListItem)
                              aria-selected={false}
                              button={true}
                              className="MuiMenuItem-root MuiMenuItem-gutters"
                              component="li"
                              disableGutters={false}
                              id="downshift-0-item-0"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                              onMouseMove={[Function]}
                              role="menuitem"
                              style={
                                Object {
                                  "height": "auto",
                                  "padding": 0,
                                }
                              }
                              tabIndex={-1}
                            >
                              <ListItem
                                ContainerComponent="li"
                                alignItems="center"
                                aria-selected={false}
                                button={true}
                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                    "button": "MuiListItem-button",
                                    "container": "MuiListItem-container",
                                    "default": "MuiListItem-default",
                                    "dense": "MuiListItem-dense",
                                    "disabled": "MuiListItem-disabled",
                                    "divider": "MuiListItem-divider",
                                    "focusVisible": "MuiListItem-focusVisible",
                                    "gutters": "MuiListItem-gutters",
                                    "root": "MuiListItem-root",
                                    "secondaryAction": "MuiListItem-secondaryAction",
                                    "selected": "MuiListItem-selected",
                                  }
                                }
                                component="li"
                                dense={false}
                                disableGutters={false}
                                disabled={false}
                                divider={false}
                                id="downshift-0-item-0"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                                onMouseMove={[Function]}
                                role="menuitem"
                                selected={false}
                                style={
                                  Object {
                                    "height": "auto",
                                    "padding": 0,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <MergeListContext
                                  alignItems="center"
                                  dense={false}
                                >
                                  <WithStyles(ButtonBase)
                                    aria-selected={false}
                                    className="MuiListItem-root MuiListItem-default MuiListItem-gutters MuiListItem-button MuiMenuItem-root MuiMenuItem-gutters"
                                    component="li"
                                    disabled={false}
                                    focusVisibleClassName="MuiListItem-focusVisible"
                                    id="downshift-0-item-0"
                                    onClick={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseMove={[Function]}
                                    role="menuitem"
                                    style={
                                      Object {
                                        "height": "auto",
                                        "padding": 0,
                                      }
                                    }
                                    tabIndex={-1}
                                  >
                                    <ButtonBase
                                      aria-selected={false}
                                      centerRipple={false}
                                      className="MuiListItem-root MuiListItem-default MuiListItem-gutters MuiListItem-button MuiMenuItem-root MuiMenuItem-gutters"
                                      classes={
                                        Object {
                                          "disabled": "MuiButtonBase-disabled",
                                          "focusVisible": "MuiButtonBase-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="li"
                                      disableRipple={false}
                                      disableTouchRipple={false}
                                      disabled={false}
                                      focusRipple={false}
                                      focusVisibleClassName="MuiListItem-focusVisible"
                                      id="downshift-0-item-0"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseMove={[Function]}
                                      role="menuitem"
                                      style={
                                        Object {
                                          "height": "auto",
                                          "padding": 0,
                                        }
                                      }
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <li
                                        aria-selected={false}
                                        className="MuiButtonBase-root MuiListItem-root MuiListItem-default MuiListItem-gutters MuiListItem-button MuiMenuItem-root MuiMenuItem-gutters"
                                        id="downshift-0-item-0"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onContextMenu={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseMove={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="menuitem"
                                        style={
                                          Object {
                                            "height": "auto",
                                            "padding": 0,
                                          }
                                        }
                                        tabIndex={-1}
                                      >
                                        <DefaultSuggestion
                                          inputValue="some text"
                                          isHighlighted={false}
                                          item="some suggestion"
                                          itemId="some suggestion"
                                          key=".0"
                                        >
                                          <WithStyles(Typography)
                                            style={
                                              Object {
                                                "padding": "11px 16px",
                                              }
                                            }
                                          >
                                            <Typography
                                              align="inherit"
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "display1": "MuiTypography-display1",
                                                  "display2": "MuiTypography-display2",
                                                  "display3": "MuiTypography-display3",
                                                  "display4": "MuiTypography-display4",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "headline": "MuiTypography-headline",
                                                  "inline": "MuiTypography-inline",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subheading": "MuiTypography-subheading",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                  "title": "MuiTypography-title",
                                                }
                                              }
                                              color="default"
                                              gutterBottom={false}
                                              headlineMapping={
                                                Object {
                                                  "body1": "p",
                                                  "body2": "p",
                                                  "display1": "h1",
                                                  "display2": "h1",
                                                  "display3": "h1",
                                                  "display4": "h1",
                                                  "h1": "h1",
                                                  "h2": "h2",
                                                  "h3": "h3",
                                                  "h4": "h4",
                                                  "h5": "h5",
                                                  "h6": "h6",
                                                  "headline": "h1",
                                                  "subheading": "h3",
                                                  "subtitle1": "h6",
                                                  "subtitle2": "h6",
                                                  "title": "h2",
                                                }
                                              }
                                              inline={false}
                                              noWrap={false}
                                              paragraph={false}
                                              style={
                                                Object {
                                                  "padding": "11px 16px",
                                                }
                                              }
                                              theme={
                                                Object {
                                                  "breakpoints": Object {
                                                    "between": [Function],
                                                    "down": [Function],
                                                    "keys": Array [
                                                      "xs",
                                                      "sm",
                                                      "md",
                                                      "lg",
                                                      "xl",
                                                    ],
                                                    "only": [Function],
                                                    "up": [Function],
                                                    "values": Object {
                                                      "lg": 1280,
                                                      "md": 960,
                                                      "sm": 600,
                                                      "xl": 1920,
                                                      "xs": 0,
                                                    },
                                                    "width": [Function],
                                                  },
                                                  "direction": "ltr",
                                                  "mixins": Object {
                                                    "gutters": [Function],
                                                    "toolbar": Object {
                                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                                        "minHeight": 48,
                                                      },
                                                      "@media (min-width:600px)": Object {
                                                        "minHeight": 64,
                                                      },
                                                      "minHeight": 56,
                                                    },
                                                  },
                                                  "overrides": Object {},
                                                  "palette": Object {
                                                    "action": Object {
                                                      "active": "rgba(0, 0, 0, 0.54)",
                                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                      "hover": "rgba(0, 0, 0, 0.08)",
                                                      "hoverOpacity": 0.08,
                                                      "selected": "rgba(0, 0, 0, 0.14)",
                                                    },
                                                    "augmentColor": [Function],
                                                    "background": Object {
                                                      "default": "#fafafa",
                                                      "paper": "#fff",
                                                    },
                                                    "common": Object {
                                                      "black": "#000",
                                                      "white": "#fff",
                                                    },
                                                    "contrastThreshold": 3,
                                                    "divider": "rgba(0, 0, 0, 0.12)",
                                                    "error": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#d32f2f",
                                                      "light": "#e57373",
                                                      "main": "#f44336",
                                                    },
                                                    "getContrastText": [Function],
                                                    "grey": Object {
                                                      "100": "#f5f5f5",
                                                      "200": "#eeeeee",
                                                      "300": "#e0e0e0",
                                                      "400": "#bdbdbd",
                                                      "50": "#fafafa",
                                                      "500": "#9e9e9e",
                                                      "600": "#757575",
                                                      "700": "#616161",
                                                      "800": "#424242",
                                                      "900": "#212121",
                                                      "A100": "#d5d5d5",
                                                      "A200": "#aaaaaa",
                                                      "A400": "#303030",
                                                      "A700": "#616161",
                                                    },
                                                    "primary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#303f9f",
                                                      "light": "#7986cb",
                                                      "main": "#3f51b5",
                                                    },
                                                    "secondary": Object {
                                                      "contrastText": "#fff",
                                                      "dark": "#c51162",
                                                      "light": "#ff4081",
                                                      "main": "#f50057",
                                                    },
                                                    "text": Object {
                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                      "hint": "rgba(0, 0, 0, 0.38)",
                                                      "primary": "rgba(0, 0, 0, 0.87)",
                                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                                    },
                                                    "tonalOffset": 0.2,
                                                    "type": "light",
                                                  },
                                                  "props": Object {},
                                                  "shadows": Array [
                                                    "none",
                                                    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                  ],
                                                  "shape": Object {
                                                    "borderRadius": 4,
                                                  },
                                                  "spacing": Object {
                                                    "unit": 8,
                                                  },
                                                  "transitions": Object {
                                                    "create": [Function],
                                                    "duration": Object {
                                                      "complex": 375,
                                                      "enteringScreen": 225,
                                                      "leavingScreen": 195,
                                                      "short": 250,
                                                      "shorter": 200,
                                                      "shortest": 150,
                                                      "standard": 300,
                                                    },
                                                    "easing": Object {
                                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                    },
                                                    "getAutoHeightDuration": [Function],
                                                  },
                                                  "typography": Object {
                                                    "body1": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.46429em",
                                                    },
                                                    "body1Next": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.5,
                                                    },
                                                    "body2": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "lineHeight": "1.71429em",
                                                    },
                                                    "body2Next": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.01071em",
                                                      "lineHeight": 1.5,
                                                    },
                                                    "button": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "buttonNext": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.02857em",
                                                      "lineHeight": 1.75,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "caption": Object {
                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.375em",
                                                    },
                                                    "captionNext": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.03333em",
                                                      "lineHeight": 1.66,
                                                    },
                                                    "display1": Object {
                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "2.125rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.20588em",
                                                    },
                                                    "display2": Object {
                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "2.8125rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.13333em",
                                                      "marginLeft": "-.02em",
                                                    },
                                                    "display3": Object {
                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3.5rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "-.02em",
                                                      "lineHeight": "1.30357em",
                                                      "marginLeft": "-.02em",
                                                    },
                                                    "display4": Object {
                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "7rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-.04em",
                                                      "lineHeight": "1.14286em",
                                                      "marginLeft": "-.04em",
                                                    },
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": 14,
                                                    "fontWeightLight": 300,
                                                    "fontWeightMedium": 500,
                                                    "fontWeightRegular": 400,
                                                    "h1": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "6rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.01562em",
                                                      "lineHeight": 1,
                                                    },
                                                    "h2": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3.75rem",
                                                      "fontWeight": 300,
                                                      "letterSpacing": "-0.00833em",
                                                      "lineHeight": 1,
                                                    },
                                                    "h3": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "3rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.04,
                                                    },
                                                    "h4": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "2.125rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00735em",
                                                      "lineHeight": 1.17,
                                                    },
                                                    "h5": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.5rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0em",
                                                      "lineHeight": 1.33,
                                                    },
                                                    "h6": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.25rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.0075em",
                                                      "lineHeight": 1.6,
                                                    },
                                                    "headline": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.5rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.35417em",
                                                    },
                                                    "overline": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.75rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.08333em",
                                                      "lineHeight": 2.66,
                                                      "textTransform": "uppercase",
                                                    },
                                                    "pxToRem": [Function],
                                                    "round": [Function],
                                                    "subheading": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "lineHeight": "1.5em",
                                                    },
                                                    "subtitle1": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1rem",
                                                      "fontWeight": 400,
                                                      "letterSpacing": "0.00938em",
                                                      "lineHeight": 1.75,
                                                    },
                                                    "subtitle2": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "0.875rem",
                                                      "fontWeight": 500,
                                                      "letterSpacing": "0.00714em",
                                                      "lineHeight": 1.57,
                                                    },
                                                    "title": Object {
                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                      "fontSize": "1.3125rem",
                                                      "fontWeight": 500,
                                                      "lineHeight": "1.16667em",
                                                    },
                                                    "useNextVariants": false,
                                                  },
                                                  "zIndex": Object {
                                                    "appBar": 1100,
                                                    "drawer": 1200,
                                                    "mobileStepper": 1000,
                                                    "modal": 1300,
                                                    "snackbar": 1400,
                                                    "tooltip": 1500,
                                                  },
                                                }
                                              }
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1"
                                                style={
                                                  Object {
                                                    "padding": "11px 16px",
                                                  }
                                                }
                                              >
                                                some suggestion
                                              </p>
                                            </Typography>
                                          </WithStyles(Typography)>
                                        </DefaultSuggestion>
                                        <NoSsr
                                          defer={false}
                                          fallback={null}
                                        >
                                          <WithStyles(TouchRipple)
                                            center={false}
                                            innerRef={[Function]}
                                          >
                                            <TouchRipple
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                className="MuiTouchRipple-root"
                                                component="span"
                                                enter={true}
                                                exit={true}
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                />
                                              </TransitionGroup>
                                            </TouchRipple>
                                          </WithStyles(TouchRipple)>
                                        </NoSsr>
                                      </li>
                                    </ButtonBase>
                                  </WithStyles(ButtonBase)>
                                </MergeListContext>
                              </ListItem>
                            </WithStyles(ListItem)>
                          </MenuItem>
                        </WithStyles(MenuItem)>
                      </PickerSuggestions>
                    </WithStyles(PickerSuggestions)>
                  </ul>
                </Paper>
              </WithStyles(Paper)>
            </PickerDropdown>
          </DebouncedContainer>
        </div>
      </Downshift>
    </MultiPicker>
  </WithStyles(MultiPicker)>
</JssProvider>
`;
